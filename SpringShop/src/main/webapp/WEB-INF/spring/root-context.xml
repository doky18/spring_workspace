<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	
	xsi:schemaLocation="
	http://www.springframework.org/schema/jee https://www.springframework.org/schema/jee/spring-jee.xsd
	http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx https://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- 데이터베이스 종류 선택 -->
	<jee:jndi-lookup 
		id="dataSource" 
		jndi-name="jdbc/mysql"
		resource-ref="true"/>
	
	<!-- 
		트랜잭션 메니저 선택 (스프링이 지원하는...) 
		사용기술: jdbc 			- DataSourceTransasctionManager 
		사용기술: mybatis 	- DataSourceTransasctionManager
		사용기술: hibernate 	- HibernateTransasctionManager
	-->
	<beans:bean 
		id="transactionManager" 
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource"/>		
		
		<!-- 스프링에서 트랜잭션을 적용하는 방법은 다음과 같이 2가지 방법이 있다
			1) 선언적 방법 (xml 설정) : 
			2) 어노테이션 적용법 : <tx: > 등록이 필요함  (어노테이션을 주도해서 하겠다)
			 -->			
			 
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<beans:bean 
		id="sqlSessionFactoryBean" 
		class="org.mybatis.spring.SqlSessionFactoryBean"
		p:dataSource-ref="dataSource"
		p:configLocation="classpath:com/edu/springshop/mybatis/config.xml"/>
		
	<beans:bean 
		id="sqlSessionTemplate" 
		class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"/>
	</beans:bean>			
	
	<context:component-scan base-package="com.edu.springshop.model"/>
	
	<!-- 파일 업로드를 위한 빈 등록 -->
	<beans:bean
		id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		p:maxUploadSizePerFile="3145728"/>	
		
	<!-- jackson data binder 등록 : json과 자바객체 사이의 자동 변환기 (Converter) -->
        <beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
            <beans:property name="messageConverters">
                <beans:list value-type="java.util.ArrayList">
                    <beans:ref bean="mappingJackson2HttpMessageConverter"/>
                </beans:list>
            </beans:property>
        </beans:bean>

        <beans:bean id="mappingJackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
            <beans:property name="supportedMediaTypes">
                <beans:value>application/json;charset=utf-8</beans:value>
            </beans:property>
        </beans:bean>
    <!-- jackson data binder 등록 -->
    
    <beans:bean
    		id="fileManager"
    		class="com.edu.springshop.util.FileManager" />
    		
   	<!-- 암호화 처리 빈 등록 -->
	<beans:bean id="passConverter" 
		class="com.edu.springshop.util.PassConverter"/>
   
    		
    <!-- 이메일 관련 빈 설정 -->
    <beans:bean class="org.springframework.mail.javamail.JavaMailSenderImpl">
    	<!-- 메일보내주는 서버 주소-->
		<beans:property name="host" value="smtp.gmail.com"/>
		<beans:property name="port" value="587"/>
		<beans:property name="username" value="dokyy1226"/>
		<beans:property name="password" value="iuhjgfmvqtyzbwir"/>
		
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.transport.protocol">smtp</beans:prop>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.debug">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<!-- 이메일 전송 객체 빈으로 등록 -->
	<beans:bean id="emailManager" class="com.edu.springshop.util.EmailManager"/>
										 
</beans>

