<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	
	xsi:schemaLocation="
		http://www.springframework.org/schema/websocket https://www.springframework.org/schema/websocket/spring-websocket.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.edu.springshop.shop.controller" />

	<!-- 공통관심사항인 Bell을 Advice로 등록하자 -->
	<beans:bean 
			id="bell" class="com.edu.springshop.aop.Bell"/>
	
	<!-- 공통관심사항인 CategoryAdvice를 Advice로 등록하자 -->
	<beans:bean id="categoryAdvice" class="com.edu.springshop.aop.CategoryAdvice"/>

	<!-- 학생을 등록한다 -->
	<beans:bean id="student" class="com.edu.springshop.school.Student"/>
	
<!-- 	
	관점(Aspect)을 정의하자 
	<aop:config>
		<aop:aspect ref="bell" id="bellAspect">
		
			지점등록
			<aop:pointcut expression="execution(public * com.edu.springshop.school.Student..*(..))" id="bellPointcut"/>
			
			시점등록...어느 지점에 어느 시점에 관여할지..
			<aop:before method="ding" pointcut-ref="bellPointcut"/>	bellpointcut 이전에!
		</aop:aspect>
	</aop:config>
	 -->
	 
	 
		<!-- 쇼핑몰 카테고리 가져오기 관점 정의 -->
	<aop:config>
		<aop:aspect ref="categoryAdvice" id="categoryAspect">
			<aop:pointcut expression="execution(public * com.edu.springshop.shop.controller..*(..))" id="categoryPointcut"/>
			<!--                                                                                                                                  -->
			<aop:around method="getCategoryList" pointcut-ref="categoryPointcut"/>
			<!-- 2/27,28 12:15   around : 전 후로                                                                       -->
		</aop:aspect>
	</aop:config>
	
	<!-- 레스트 요청에 대한 글로벌 예외를 처리할 빈 등록 : json등의 데이터로 결과를 보여줌 -->
	<beans:bean 
			id="restShopGlobalException"
			class="com.edu.springshop.aop.RestShopGlobalException"/>
			
	<!-- 글로벌 예외이지만 jsp로 결과를 보여주는 객체 -->
	<beans:bean
			id="shopGlobalException"	
			class="com.edu.springshop.aop.ShopGlobalException"/>
			
	<!-- 웹소켓 핸들러 등록 -->
	 <beans:bean id="chatHandler" class="com.edu.springshop.chat.ChatHandler"/>
	 
	 <!-- 웹소켓 설정 -->
	 <websocket:handlers>
	 	<websocket:mapping handler="chatHandler" path="/chat"/>
		<websocket:handshake-interceptors>
			 <beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
		</websocket:handshake-interceptors>	 	
	 
	 </websocket:handlers>
	 
	
</beans:beans>
